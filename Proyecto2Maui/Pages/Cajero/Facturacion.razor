@page "/medicoFacturacion"
@using Proyecto2Maui.Modelos;
@using Proyecto2Maui.Modelos.Request;
@using Proyecto2Maui.Servicios;
@using Proyecto2Maui;

@inject ITurnoServices turnoService
@inject IPruebaLabService pruebaLabService
@inject IReciboService reciboService



<div class="container">
    <div class="row">
        <div class="col-sm-12 col-md-8 col-lg-8 col-xl-8 bg white"
             style="border-radius: 10px">
            <div class="container">
                <div class="row">
                    <div class="col-sm-12 col-md-5 col-lg-5 col-xl-5 bg-white mt-3"
                         style="border-radius: 10px 0 0 10px">
                        <div>
                            <h5 class="text-center mb-3 text-black text-uppercase mt-2"
                                style="
                                            font-family: 'Courier New', Courier,
                                                monospace;
                                            font-weight: 600;
                                        ">
                                DATOS DEL CLIENTE
                            </h5>
                            <h4 class="text-center">T-1</h4>

                            <div class="form-group">
                                <div>
                                    <label for="nombre">Nombre</label>
                                </div>
                                <div>
                                    <input @bind="cliente.nombreCliente"
                                           type="text"
                                           class="form-control-sm mb-2"
                                           style="
                                                        border: 1px solid
                                                            gainsboro;
                                                    "
                                           id="nombre"
                                           required
                                           placeholder="Ingrese nombre(s)" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    <label for="apellido">Apellido</label>
                                </div>
                                <div>
                                    <input @bind="cliente.apellidoCliente"
                                           type="text"
                                           class="form-control-sm mb-2"
                                           style="
                                                        border: 1px solid
                                                            gainsboro;
                                                    "
                                           id="apellido"
                                           required
                                           placeholder="Ingrese apellido(s)" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    <label for="telefono">Teléfono</label>
                                </div>
                                <div>
                                    <input @bind="cliente.telefono"
                                        type="text"
                                           class="form-control-sm mb-2"
                                           style="
                                                        border: 1px solid
                                                            gainsboro;
                                                    "
                                           id="telefono"
                                           placeholder="Ingrese el télefono" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    <label for="cedula">Cédula</label>
                                </div>
                                <div>
                                    <input @bind="cliente.cedula"
                                           type="text"
                                           class="form-control-sm mb-2"
                                           style="
                                                        border: 1px solid
                                                            gainsboro;
                                                    "
                                           id="cedula"
                                           placeholder="Ingrese la cédula" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    <label for="email">Email</label>
                                </div>
                                <div>
                                    <input @bind="cliente.email"
                                           type="email"
                                           class="form-control-sm mb-2"
                                           style="
                                                        border: 1px solid
                                                            gainsboro;
                                                    "
                                           id="email"
                                           placeholder="Ingrese el email" />
                                </div>
                            </div>
                            <h6 class="text-center pt-5">
                                Añadir Prueba(s)
                            </h6>


                            <div class="btn-group ">
                                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuClickableInside" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                                    Pruebas de Laboratorio
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuClickableInside">
                                    @if (PruebasLab.Count > 0)
                                    {
                                        foreach (var item in PruebasLab)
                                        {
                                            <li>
                                                <a class="dropdown-item"
                                                   @onclick="() => AgregarItem(id:item.idPruebaLab, nombrePrueba: item.nombrePrueba, precio:item.precio)">
                                                    @item.nombrePrueba
                                                </a>
                                            </li>
                                        }

                                    }
                                    else
                                    {
                                        <li class="spinner-border text-primary" role="status">

                                            <span class="visually-hidden">Loading...</span>

                                        </li>
                                    }

                                </ul>
                            </div>


                        </div>
                    </div>
                    <div class="col-sm-12 col-md-7 col-lg-7 col-xl-7 bg-white mt-3"
                         style="border-radius: 0 10px 10px 0">
                        <h5 class="text-center mb-3 text-black text-uppercase mt-2"
                            style="
                                        font-family: 'Courier New', Courier,
                                            monospace;
                                        font-weight: 600;
                                    ">
                            Seleccion a Facturar
                        </h5>
                        <table class="table"
                               style="
                                        display: block;
                                        height: 500px;
                                        overflow-y: auto;
                                        scrollbar-gutter: stable both-edges;
                                    ">
                            <thead>
                                <tr>
                                    <th scope="col">Prueba</th>
                                    <th scope="col">Precio</th>
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- PRUEBA SELECCIONADA-->
                                @if (PruebasSeleccionadas.Count() > 0)
                                {
                                    @foreach (var item in PruebasSeleccionadas)
                                    {
                                        <tr>
                                            <th scope="row">@item.nombrePrueba</th>
                                            <td>$@item.precio</td>
                                            <td>
                                                <input class="btn btn-outline-danger btn-sm mx-1 mt-1"
                                                       style="
                                                        padding: 0.2rem 0.4rem;
                                                        font-size: 0.7rem;
                                                    "
                                                       @onclick="() => AgregarItem(id:item.idPruebaLab, nombrePrueba: item.nombrePrueba, precio:item.precio)"
                                                       type="button"
                                                       value="Quitar" />
                                            </td>
                                        </tr>
                                    }

                                    <tr class="ms-5">
                                        <th scope="row"></th>
                                        <td>
                                            <strong>TOTAL</strong>
                                        </td>
                                        <td>
                                            <strong class="text-success">$@Total</strong>
                                        </td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                        <div class=" justify-content-evenly mb-4">
                            <input class="btn btn-secondary btn mx-1 mt-1 mb-1"
                                   type="button"
                                   value="Limpiar"
                                   ps-2
                                   @onclick="LimpiarItems" />

                            <input class="btn btn-success btn mx-1 mt-1 mb-1"
                                   type="button"
                                   disabled=@estaCargando
                                   value="Generar recibo"
                                   @onclick="GenerarRecibo" />

                        </div>
                    </div>
                </div>
            </div>
        </div>



        <div class="col-sm-12 col-md-4 col-lg-4 col-xl-4 bg-white mt-3"
             style="border-radius: 10px">
            <div>
                <div>
                    <h5 class="text-center text-uppercase mt-2"
                        style="
                                    font-family: 'Courier New', Courier,
                                        monospace;
                                    font-weight: 600;
                                ">
                        Turnos Pendientes
                    </h5>
                </div>
                <!--Turnos pendientes-->

                <table class="table table-fixed mx-auto" style=" display: block; height: 500px; overflow-y: auto; scrollbar-gutter: stable both-edges; ">
                    <thead>
                        <tr>
                            <th scope="col">Turno#</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody>

                        @if (TurnosPendientes != null && TurnosPendientes.Count > 0)
                        {
                            foreach (var item in TurnosPendientes)
                            {
                                <tr>
                                    <th scope="row">@item.idTurno</th>
                                    <td>
                                        <input class="btn btn-success btn-sm mx-1 mt-1"
                                               style="
                                                padding: 0.2rem 0.4rem;
                                                font-size: 0.7rem;
                                            "
                                               type="button"
                                               value="Atender" />
                                        <input class="btn btn-primary btn-sm mx-1 mt-1"
                                               style="
                                                padding: 0.2rem 0.4rem;
                                                font-size: 0.7rem;
                                            "
                                               type="button"
                                               value="Ver"
                                               @onclick="() => CargarPruebasDelTurnoParaFacturar(item.pruebasLab)" />

                                        <input class="btn btn-danger btn-sm mx-1 mt-1"
                                               style="
                                                padding: 0.2rem 0.4rem;
                                                font-size: 0.7rem;
                                            "
                                               type="button"
                                               value="Cancelar" />
                                    </td>
                                </tr>
                            }

                        }
                        else
                        {
                            <tr>
                                <td>
                                    <button class="btn btn-primary" type="button" disabled>
                                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                        Cargando...
                                    </button>
                                </td>
                            </tr>
                        }


                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
        <img src="..." class="rounded me-2" alt="...">
        <strong class="me-auto">Bootstrap</strong>
        <small>11 mins ago</small>
        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
        Hello, world! This is a toast message.
    </div>
</div>


<style>
    .dropdown-menu {
        max-height: 125px;
        overflow-y: scroll;
    }</style>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

@code {
    List<Turno> TurnosPendientes = new();
    List<PruebaLab> PruebasLab = new();
    List<PruebaLab> PruebasSeleccionadas = new List<PruebaLab>();
    ReciboRequest cliente = new();

    bool estaCargando = false;

    decimal? Total = 0.0m;

    protected override async Task OnInitializedAsync()
    {
        try
        {

            var pruebasLab = await pruebaLabService.ObtenerPruebas();

            if (pruebasLab != null)
            {
                PruebasLab = pruebasLab.ToList();
            }


            var turnosPendientes = await turnoService.GetTurnos();
            if (pruebasLab != null)
            {
                TurnosPendientes = turnosPendientes;
            }

        }
        catch (Exception ex)
        {

            await App.Current.MainPage.DisplayAlert("Oops", $"Ocurrio un error al cargar los datos de la api. ERRORCODE:{ex.Message}", "Ok");

        }

    }

    private async Task GenerarRecibo()
    {
        if (PruebasSeleccionadas != null)
        {

            try
            {
                estaCargando = true;

                cliente.pruebas = PruebasSeleccionadas.Select(ps => new PruebaLab()
                    {
                        idPruebaLab = ps.idPruebaLab,
                        nombrePrueba = string.Empty,
                        precio = decimal.Zero
                    }).ToList();


                var resultado = await reciboService.GenerarRecibo(cliente);

                estaCargando = false;

                await LimpiarItems();

            }
            catch (Exception ex)
            {
                await App.Current.MainPage.DisplayAlert("Oops", $"Ocurrio un error al cargar los datos de la api. ERRORCODE:{ex.Message}", "Ok");
            }

        }

    }


    private void AgregarItem(int id, string nombrePrueba, decimal? precio)
    {

        if (true)
        {

        }
        PruebaLab item = PruebasSeleccionadas.FirstOrDefault(d => d.idPruebaLab == id);

        if (item == null)
        {
            PruebasSeleccionadas.Add(new()
                {
                    idPruebaLab = id,
                    nombrePrueba = nombrePrueba,
                    precio = precio
                });

        }
        else
        {
            QuitarItem(item);
        }

        Total = PruebasSeleccionadas.Select(ps => ps.precio).Sum();
    }

    private void QuitarItem(PruebaLab item)
    {
        PruebasSeleccionadas.Remove(item);
    }


    private Task LimpiarItems()
    {
        PruebasSeleccionadas = new();
        Total = 0.0m;
        cliente = new();


        return Task.CompletedTask;
    }

    private void CargarPruebasDelTurnoParaFacturar(List<PruebaLab> pruebas)
    {
        LimpiarItems();

        var pruebasConPrecio = pruebas.Select(p => new PruebaLab()
            {
                idPruebaLab = p.idPruebaLab,
                nombrePrueba = p.nombrePrueba,
                precio = PruebasLab.Where(pl => pl.idPruebaLab == p.idPruebaLab).Select(pl => pl.precio).First()
            }).ToList();

        Total = pruebasConPrecio.Select(p => p.precio).Sum();

        PruebasSeleccionadas = pruebasConPrecio;

    }


}
