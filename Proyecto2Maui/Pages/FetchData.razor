@page "/fetchdata"

@inject WeatherForecastService ForecastService

<h1>Weather forecasts</h1>

<p>This component demonstrates fetching data from a service.</p>


<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem" Class="rz-p-2">
    <RadzenCheckBox @bind-Value="@allowVirtualization" Name="allowVirtualization" />
    <RadzenLabel Text="Allow virtualization" Component="allowVirtualization" />
</RadzenStack>

<RadzenDataList AllowVirtualization=@allowVirtualization Style="@(allowVirtualization ? "height:400px;overflow:auto;" : "")"
                WrapItems="@(!allowVirtualization)" AllowPaging="@(!allowVirtualization)" IsLoading=@isLoading 
                Data="@forecasts" Count=@count TItem="WeatherForecast" PageSize="2" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true">
    <Template Context="forecast">
        <RadzenCard Style="width: 100%; padding: 0;">
            <RadzenRow Gap="0">
                <RadzenColumn Size="12" SizeLG="3" Class="rz-p-4 product-title">
                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="rz-color-secondary">@(forecast.Summary)</RadzenText>
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeLG="7" Class="rz-p-4">
                        <RadzenRow Gap="0">
                            <RadzenColumn Size="12" SizeMD="6" SizeLG="2">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-mb-0">Temperature c</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body2">@(forecast.TemperatureC)</RadzenText>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="6" SizeLG="2">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-mb-0">Date</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body2">@(forecast.Date)</RadzenText>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="6" SizeLG="5">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-mb-0">Temperature f</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body2">@(forecast.TemperatureF)</RadzenText>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="6" SizeLG="3" Class="rz-text-align-start rz-text-align-lg-end">
                                <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Shade="Shade.Lighter" class="price-badge" Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", forecast.TemperatureC)}") />
                            </RadzenColumn>
                        </RadzenRow>
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeLG="2" Class="rz-p-4">
                        <RadzenButton Text="Order now" Style="width: 100%" />
                    </RadzenColumn>
                </RadzenRow>
            </RadzenCard>
        </Template>
    </RadzenDataList>

    <style>
        .product-title {
            min-height: 72px;
            background-color: var(--rz-secondary-lighter);
        }

        .price-badge {
            font-size: 16px;
            font-weight: bold;
            line-height: 20px;
            padding: 8px;
        }

    </style>




@*
@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}*@

@code {
    private WeatherForecast[] forecasts;
    bool allowVirtualization;
    int count;
    bool isLoading;



    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
        count = forecasts.Count();
        isLoading = false;
    }
}
