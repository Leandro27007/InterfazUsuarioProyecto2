@page "/login"
@using CurrieTechnologies.Razor.SweetAlert2;
@using Microsoft.AspNetCore.Components.Authorization
@using System.IdentityModel.Tokens.Jwt
@using System.Net.Http.Json
@inject HttpClient httpClient
@using System.Security.Claims
@using Proyecto2Maui.Authentication;
@using Proyecto2Maui.Modelos;
@inject NavigationManager navigateMgr
@inject AuthenticationStateProvider authStateProvider
@inject SweetAlertService Swal

<style>
    body {
        margin: 0;
        padding: 0;
        font-family: "Franklin Gothic Medium", "Arial Narrow", Arial, sans-serif;
        background: linear-gradient(150deg, #6c3483, #58d68d);
        height: 100vh;
    }

    .contenedor {
        display: flex;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        -webkit-transform: translate(-50%, -50%);
        -moz-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        -o-transform: translate(-50%, -50%);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        border-radius: 10px;
        -webkit-border-radius: 10px;
        -moz-border-radius: 10px;
        -ms-border-radius: 10px;
        -o-border-radius: 10px;
    }

    .label {
        text-transform: uppercase;
        font-size: 35px;
        color: white;
        text-align: center;
    }

    .parte-izquierda {
        background-color: blue;
        width: 250px;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 10px 0 0 10px;
        -webkit-border-radius: 10px 0 0 10px;
        -moz-border-radius: 10px 0 0 10px;
        -ms-border-radius: 10px 0 0 10px;
        -o-border-radius: 10px 0 0 10px;
    }

    .formulario {
        width: 400px;
        background: white;
        border-radius: 0 10px 10px 0;
        -webkit-border-radius: 0 10px 10px 0;
        -moz-border-radius: 0 10px 10px 0;
        -ms-border-radius: 0 10px 10px 0;
        -o-border-radius: 0 10px 10px 0;
    }

        .formulario h1 {
            text-align: center;
            padding: 0 0 20px 0;
            color: blue;
            cursor: default;
        }

        .formulario form {
            padding: 0 40px;
            box-sizing: border-box;
        }

    form .usuario {
        position: relative;
        border-bottom: 2px solid #adadad;
        margin: 30px 0;
    }

    .usuario input {
        width: 100%;
        padding: 0 5px;
        height: 40px;
        font-size: 16px;
        border: none;
        outline: none;
    }

    .usuario label {
        position: absolute;
        top: 50%;
        left: 5px;
        color: #adadad;
        transform: translateY(-50%);
        -webkit-transform: translateY(-50%);
        -moz-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        -o-transform: translateY(-50%);
        font-size: 16px;
        pointer-events: none;
        transition: 0.5s;
        -webkit-transition: 0.5s;
        -moz-transition: 0.5s;
        -ms-transition: 0.5s;
        -o-transition: 0.5s;
    }

    .usuario span::before {
        content: "";
        position: absolute;
        top: 40px;
        left: 0;
        width: 100%;
        height: 2px;
        background: blue;
        transition: 0.5s;
    }

    .usuario input:focus ~ label,
    .usuario input:focus ~ label {
        top: -5px;
        color: blue;
    }

    .usuario input:focus ~ span::before,
    .usuario input:focus ~ span::before {
        width: 100%;
    }

    input[type="submit"] {
        width: 100%;
        height: 50px;
        margin-bottom: 20px;
        border: 2px solid;
        background: blue;
        border-radius: 25px;
        -webkit-border-radius: 25px;
        -moz-border-radius: 25px;
        -ms-border-radius: 25px;
        -o-border-radius: 20px;
        font-size: 18px;
        color: white;
        cursor: pointer;
        outline: none;
    }

        input[type="submit"]:hover {
            border-color: blue;
            transition: 0.5s;
            -webkit-transition: 0.5s;
            -moz-transition: 0.5s;
            -ms-transition: 0.5s;
            -o-transition: 0.5s;
        }

        input[type="submit"]:active {
            background: #6c3483;
            border-color: white;
            transition: 0.1s;
            -webkit-transition: 0.1s;
            -moz-transition: 0.1s;
            -ms-transition: 0.1s;
            -o-transition: 0.1s;
        }

</style>

    <div class="contenedor">
        <div class="parte-izquierda">
            <label class="label">Laboratorio Sistema</label>
        </div>
        <div class="formulario">
            <h1>LOGIN</h1>
            <EditForm Model="LoginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <ValidationSummary></ValidationSummary>
                <div class="usuario">
                    <InputText type="text" required @bind-Value="LoginModel.UserName" />
                    <label>Nombre de usuario</label>
                </div>
                <div class="usuario">
                <InputText type="password" required @bind-Value="LoginModel.Password" />
                    <label>Contraseña</label>
                </div>
                <Input type="submit" value="Iniciar Sesión"  />
            </EditForm>
        </div>
    </div>



@code {
    private Login LoginModel { get; set; } = new();

    private async Task HandleLogin()
    {
        var result = await httpClient.PostAsJsonAsync("https://proyecto2web.azurewebsites.net/api/Autenticacion/Login", LoginModel);
        var response = await result.Content.ReadFromJsonAsync<ServiceResponse>();
        if (response.Flag)
        {
            //Save the token, decrypt and get user claims and save to secured storage.
            var getUserSession = GetUserClaims(response.Token);
            if (getUserSession == null) return;

            var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(getUserSession);

              await Swal.FireAsync(new SweetAlertOptions()
                {
                    Title = "Iniciando session",
                    Color = "Darkblue",
                    Html = $"<strong>Bienvenido</strong>",
                    Footer = "",
                    Icon = SweetAlertIcon.Success,
                    ShowConfirmButton = false,
                    Timer = 1500
                });

            navigateMgr.NavigateTo("/", forceLoad: true, replace: true);
            LoginModel = new Login();
        }
        else
        {
            await Application.Current.MainPage.DisplayAlert("Info", response.Message, "Ok");
            return;
        }
    }

    private UserSession GetUserClaims(string token)
    {
        var handler = new JwtSecurityTokenHandler();
        var readToken = handler.ReadJwtToken(token);
        var claims = readToken.Claims;

        return new UserSession()
            {
                UserName = claims.First(_ => _.Type == ClaimTypes.Name).Value,
                UserRole = claims.First(_ => _.Type == ClaimTypes.Role).Value,
                Email = claims.First(_ => _.Type == ClaimTypes.Email).Value,
                Token = token
            };
    }
}
